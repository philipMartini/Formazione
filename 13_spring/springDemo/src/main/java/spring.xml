<?xml version="1.0" encoding="UTF-8"?>


<!-- <beans xmlns="http://www.springframework.org/schema/beans" -->
<!--        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" -->
<!--        xmlns:integration="http://www.springframework.org/schema/integration" -->
<!-- 		xmlns:context="http://www.springframework.org/schema/context" -->
<!--        xsi:schemaLocation="http://www.springframework.org/schema/beans -->
<!-- 		http://www.springframework.org/schema/beans/spring-beans-2.5.xsd  -->
<!--             http://www.springframework.org/schema/integration -->
<!--             http://www.springframework.org/schema/integration/spring-integration-1.0.xsd">  -->

<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:p="http://www.springframework.org/schema/p"
    xmlns:context="http://www.springframework.org/schema/context"
    xmlns:mvc="http://www.springframework.org/schema/mvc"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
http://www.springframework.org/schema/context
http://www.springframework.org/schema/context/spring-context-3.0.xsd
http://www.springframework.org/schema/mvc
http://www.springframework.org/schema/mvc/spring-mvc-3.0.xsd">


	
<!-- 	Bean definition Inheritance 
	
	<bean id="parentTriangle" class="org.filippo.formazione.Triangle">
		<property name="pointA" ref="zeroPoint"/>	
	
	</bean>
	
	<bean id="triangle1" class="org.filippo.formazione.Triangle" parent="parentTriangle">
		<property name="pointB" ref="pointB"/>
		<property name="pointC" ref="pointC"/>
	
	</bean>
	-->
	
	
	
	
<!-- 	autowire va aggiunto qui => byName, byType, byConstructor -->
<!-- singleton = una sola istanza in tutto lo spring container, prototype una nuova istanza per ogni ref, o getBean -->
	<bean id="triangle" class="org.filippo.formazione.Triangle" scope="singleton" init-method="myInit" destroy-method="myDestroy">
<!-- 		 <property name="type" value="Equilateral"/>  -->
<!-- 		<constructor-arg index="0" value="Equilateral"/>  -->
<!-- 	<constructor-arg index="1" type="int" value="20"/>  -->
			<property name="pointA" ref="zeroPoint"/>
			<property name="pointB">
				<bean class="org.filippo.formazione.Point">
					<property name="x" value="-20"/>
					<property name="y" value="0"/>
				</bean>
	
			</property>
			<property name="pointC">
				<bean class="org.filippo.formazione.Point">
					<property name="x" value="20"/>
					<property name="y" value="0"/>
				</bean>
				
			</property>
			
			<property name="points">
				<list>
					<ref bean="zeroPoint"/>
					<ref bean="zeroPoint"/>
					<ref bean="zeroPoint"/>
				
				</list>
			</property>
		
	</bean>
	
<!-- 	Questo punto ha senso che sia istanziato come bean a parte dato che potrebbe essere riutilizzato,  -->
<!-- 	ma gli altri possono essere definiti direttamente nel Triangle che li usa -->
	<bean id="zeroPoint" class="org.filippo.formazione.Point">
		<property name="x" value="0"/>
		<property name="y" value="0"/>
	</bean>
	
	
<!-- 	Se definisco l'id di un bean con lo stesso nome della variabile membro a cui si riferisce posso usare autowire rende pero
			piu difficile il debugging quindi Meglio wiring manuale -->
<!-- 	per injectare codice -->
	<bean id="pointA" class="org.filippo.formazione.Point">
		<qualifier value="circleRelated"/>
		<property name="x" value="${pointA.pointX}"/>
		<property name="y" value="${pointA.pointY}"/> 
	</bean>
	
	<bean id="pointB" class="org.filippo.formazione.Point">
		<property name="x" value="-20"/>
		<property name="y" value="0"/>
	</bean>
	
	<bean id="pointC" class="org.filippo.formazione.Point">
		<property name="x" value="20"/>
		<property name="y" value="0"/>
	</bean>
	
	<bean id="circle" class="org.filippo.formazione.Circle">
		<property name="center" ref="pointA"></property>
		<property name="message" ref="messageSource"></property>
	</bean>
	
	<alias name="triangle" alias="triangle-alias"/>
	
<!-- 	<bean class="org.filippo.formazione.DisplayNameBeanPostProcessor"/> -->
<!-- 	<bean class="org.filippo.formazione.MyBeanFactoryPP"/> -->
	<bean class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations" value="pointsConfig.properties"/>
	</bean>
	
<!-- 	Questo bean serve per la validazione di required ad esempio -->
<!-- 	<bean class="org.springframework.beans.factory.annotation.RequiredAnnotationBeanPostProcessor"/> -->
<!-- 	<bean class="org.springframework.beans.factory.annotation.AutowiredAnnotationBeanPostProcessor"/>  -->
	
<!-- 	Se non voglio aggiungere a mano tutti gli annotation post processor posso aggiungere questo tag -->
<!-- 	<context:annotation-config/> -->
	
	<context:component-scan base-package="org.filippo.formazione"></context:component-scan>  

	<bean id="messageSource" class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>mymessages</value>
			</list>
		</property>
	
	</bean>
</beans>
